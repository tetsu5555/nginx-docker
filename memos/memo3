Webは三つの階層
- Webサーバー
  - WebブラウザなどのクライアントからのHTTPリクエストを受け付け、必要に応じてアプリケーションサーバーに転送する
  - Webサーバーは機能の見方によってリーバスプロキシやロードバランサーと呼ばれる
- アプリケーションサーバー
  - ロジックを処理する階層
- データベース
  - データを保持する階層


プロキシ(フォワードプロキシ)
  - クライアントの近くに用意して、外部ネットワークにアクセスに行くプロキシサーバー
  - アクセス先のプロキシサーバーの情報をWebブラウザなどのクライアントに登録して、
  - 用途
    - 会社などの組織で内部のLANからインターネットにアクセスに行くプロキシサーバー
    - キャッシュを使ってWebへのアクセスを効率化
    - ウィルスチェックやフィルタリング



リバースプロキシ
  - 用途
    - 可用性の向上
      - バックエンドのアプリケーションを複数容易しておき、なんらかの理由でダウンしたした場合に、リバースプロキシがそれを検知して別のサーバーに処理を振り分けるなど
    - メンテナンスの補助
      - リバースプロキシの設定を変えて、メンテナンス中のページを表示しておいて作業を行うなど
    - キャッシュによる性能向上
    - HTTPSへの対応
      - リバースプロキシにSSLの処理をさせて、バックエンドは通常のHTTPを使うことで、SSLを考えずにWebサイトを比較的容易にHTTPS対応させられる

リバースプロキシの基本設定



タイムアウトの設定
nginxはバックエンドのサーバーがダウンしていると判定すると次のサーバーを選択してアクセスする
ダウンしているという判定は接続失敗やタイムアウトで行う。

タイムアウトの種類
- connect_timeout
- read_timeout
- send_timeout

タイムアウトの処理
- POSTやPUTといったメソッドでクライアントからサーバーへデータを送信する場合
- nginxは次のバックエンドを選んだ時に、リクエストの中身を次のサーバーにも送る。
- そのため、バックエンドが重い処理をする時にタイムアウトを短くしすぎると、分散したバックエンドがそれぞれ同じデータを受け取って処理を続けてしまう。
- デフォルトの設定は60秒秒なので、1分以上かかる処理をすると複数のサーバーが同じリクエストを処理してしまうかもしれない

